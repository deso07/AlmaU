import React, { useState } from 'react';
import {
  Container,
  Typography,
  Grid,
  Box,
  Tabs,
  Tab,
  TextField,
  InputAdornment,
  Alert,
  Snackbar
} from '@mui/material';
import { Search as SearchIcon } from '@mui/icons-material';
import CourseCard from '../components/CourseCard';
import { Discipline, Course } from '../types/course';

// –í—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
const mockDisciplines: Discipline[] = [
  {
    id: '1',
    title: '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ',
    description: '–ö—É—Ä—Å—ã –ø–æ —Ä–∞–∑–ª–∏—á–Ω—ã–º —è–∑—ã–∫–∞–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º',
    icon: 'üíª',
    courses: [
      {
        id: '1',
        title: '–í–≤–µ–¥–µ–Ω–∏–µ –≤ Python',
        description: '–ë–∞–∑–æ–≤—ã–π –∫—É—Ä—Å –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é –Ω–∞ Python',
        price: 2999,
        discountPrice: 1499,
        instructor: 'Tim Cook',
        rating: 4.5,
        reviewsCount: 128,
        materials: [
          { 
            id: '1', 
            type: 'video', 
            title: '–í–≤–µ–¥–µ–Ω–∏–µ –≤ Python', 
            description: '–ë–∞–∑–æ–≤–æ–µ –≤–≤–µ–¥–µ–Ω–∏–µ –≤ —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è Python',
            duration: '45 –º–∏–Ω', 
            url: '#' 
          },
          { 
            id: '2', 
            type: 'presentation', 
            title: '–û—Å–Ω–æ–≤—ã Python', 
            description: '–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∫–æ–Ω—Ü–µ–ø—Ü–∏—è–º–∏ Python',
            url: '#' 
          },
          { 
            id: '3', 
            type: 'task', 
            title: '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è', 
            description: '–ù–∞–±–æ—Ä –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞–Ω–∏–π –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞',
            url: '#' 
          }
        ],
        thumbnail: 'https://source.unsplash.com/random/300x200?python',
        duration: '12 —á–∞—Å–æ–≤',
        level: 'beginner'
      },
      // –î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ –∫—É—Ä—Å–æ–≤ –∑–¥–µ—Å—å
    ]
  },
  {
    id: '2',
    title: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞',
    description: '–ö—É—Ä—Å—ã –ø–æ –≤—ã—Å—à–µ–π –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ',
    icon: 'üìê',
    courses: [
      {
        id: '2',
        title: '–õ–∏–Ω–µ–π–Ω–∞—è –∞–ª–≥–µ–±—Ä–∞',
        description: '–û—Å–Ω–æ–≤—ã –ª–∏–Ω–µ–π–Ω–æ–π –∞–ª–≥–µ–±—Ä—ã –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤',
        price: 3999,
        discountPrice: 1999,
        instructor: 'Albert Einstein',
        rating: 4.8,
        reviewsCount: 95,
        materials: [
          { 
            id: '1', 
            type: 'video', 
            title: '–í–µ–∫—Ç–æ—Ä—ã –∏ –º–∞—Ç—Ä–∏—Ü—ã', 
            description: '–í–∏–¥–µ–æ—É—Ä–æ–∫ –ø–æ –æ—Å–Ω–æ–≤–∞–º –ª–∏–Ω–µ–π–Ω–æ–π –∞–ª–≥–µ–±—Ä—ã',
            duration: '60 –º–∏–Ω', 
            url: '#' 
          },
          { 
            id: '2', 
            type: 'presentation', 
            title: '–°–∏—Å—Ç–µ–º—ã —É—Ä–∞–≤–Ω–µ–Ω–∏–π', 
            description: '–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –ø–æ —Ä–µ—à–µ–Ω–∏—é —Å–∏—Å—Ç–µ–º –ª–∏–Ω–µ–π–Ω—ã—Ö —É—Ä–∞–≤–Ω–µ–Ω–∏–π',
            url: '#' 
          },
          { 
            id: '3', 
            type: 'task', 
            title: '–ü—Ä–∞–∫—Ç–∏–∫—É–º', 
            description: '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è –ø–æ –ª–∏–Ω–µ–π–Ω–æ–π –∞–ª–≥–µ–±—Ä–µ',
            url: '#' 
          }
        ],
        thumbnail: 'https://source.unsplash.com/random/300x200?math',
        duration: '16 —á–∞—Å–æ–≤',
        level: 'intermediate'
      },
      // –î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ –∫—É—Ä—Å–æ–≤ –∑–¥–µ—Å—å
    ]
  }
];

const AdditionalCourses: React.FC = () => {
  const [selectedDiscipline, setSelectedDiscipline] = useState(0);
  const [searchQuery, setSearchQuery] = useState('');
  const [favorites, setFavorites] = useState<string[]>([]);
  const [snackbar, setSnackbar] = useState({
    open: false,
    message: '',
    severity: 'success' as 'success' | 'error'
  });

  const handleDisciplineChange = (event: React.SyntheticEvent, newValue: number) => {
    setSelectedDiscipline(newValue);
  };

  const handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {
    setSearchQuery(event.target.value);
  };

  const handlePurchase = (courseId: string) => {
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–æ–∫—É–ø–∫–∏ –∫—É—Ä—Å–∞
    setSnackbar({
      open: true,
      message: '–ö—É—Ä—Å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω!',
      severity: 'success'
    });
  };

  const handleFavorite = (courseId: string) => {
    setFavorites(prev => {
      if (prev.includes(courseId)) {
        return prev.filter(id => id !== courseId);
      }
      return [...prev, courseId];
    });
  };

  const handleCloseSnackbar = () => {
    setSnackbar(prev => ({ ...prev, open: false }));
  };

  const filteredCourses = mockDisciplines[selectedDiscipline].courses.filter(course =>
    course.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
    course.description.toLowerCase().includes(searchQuery.toLowerCase())
  );

  return (
    <Container maxWidth="lg" sx={{ py: 4 }}>
      <Typography variant="h4" component="h1" gutterBottom>
        –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã
      </Typography>

      <Box sx={{ mb: 4 }}>
        <TextField
          fullWidth
          variant="outlined"
          placeholder="–ü–æ–∏—Å–∫ –∫—É—Ä—Å–æ–≤..."
          value={searchQuery}
          onChange={handleSearch}
          InputProps={{
            startAdornment: (
              <InputAdornment position="start">
                <SearchIcon />
              </InputAdornment>
            ),
          }}
        />
      </Box>

      <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 4 }}>
        <Tabs
          value={selectedDiscipline}
          onChange={handleDisciplineChange}
          variant="scrollable"
          scrollButtons="auto"
        >
          {mockDisciplines.map((discipline) => (
            <Tab
              key={discipline.id}
              label={
                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
                  <span>{discipline.icon}</span>
                  <span>{discipline.title}</span>
                </Box>
              }
            />
          ))}
        </Tabs>
      </Box>

      <Grid container spacing={3}>
        {filteredCourses.map((course) => (
          <Grid item xs={12} sm={6} md={4} key={course.id}>
            <CourseCard
              course={course}
              onPurchase={handlePurchase}
              onFavorite={handleFavorite}
              isFavorite={favorites.includes(course.id)}
            />
          </Grid>
        ))}
      </Grid>

      <Snackbar
        open={snackbar.open}
        autoHideDuration={6000}
        onClose={handleCloseSnackbar}
      >
        <Alert
          onClose={handleCloseSnackbar}
          severity={snackbar.severity}
          sx={{ width: '100%' }}
        >
          {snackbar.message}
        </Alert>
      </Snackbar>
    </Container>
  );
};

export default AdditionalCourses; 